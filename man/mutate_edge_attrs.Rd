% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate_edge_attrs.R
\name{mutate_edge_attrs}
\alias{mutate_edge_attrs}
\title{Mutate a set of edge attribute values}
\usage{
mutate_edge_attrs(graph, edge_attr_from, expression, edge_attr_to = NULL,
  round_to = 3)
}
\arguments{
\item{graph}{a graph object of class}

\item{edge_attr_from}{the name of the edge attribute
column from which values will be mutated.}

\item{expression}{an expression for the mutation of
all edge attribute values specified by
\code{edge_attr_from}. It is to be supplied as a
string where a \code{.} represents the edge
attribute values.}

\item{edge_attr_to}{an optionally supplied name of
a new edge attribute to which the mutated values
will be applied. This will retain the original edge
attribute and its values.}

\item{round_to}{the maximum number of decimal places
to retain for the mutated edge attribute values. The
default value is \code{3}.}
}
\value{
a graph object of class
\code{dgr_graph}.
}
\description{
Within a graph's internal edge data
frame (edf), mutate numeric edge attribute values
using an expression. Optionally, one can specify a
different edge attribute name and create a new edge
attribute while retaining the original edge
attribute and its values.
}
\examples{
# Create a random graph
graph <-
  create_random_graph(
    5, 6, set_seed = 3) \%>\%
    set_edge_attrs("value", 3)

# Get the graph's internal edf to show which
# edge attributes are available
get_edge_df(graph)
#>   from to rel value
#> 1    4  1         3
#> 2    2  4         3
#> 3    4  3         3
#> 4    3  5         3
#> 5    5  1         3
#> 6    4  5         3

# Mutate the `value` edge attribute, multiplying
# each value by 1.5
graph <-
  graph \%>\%
  mutate_edge_attrs("value", ". * 1.5")

# Get the graph's internal edf to show that the
# edge attribute values had been mutated
get_edge_df(graph)
#>   from to rel value
#> 1    4  1       4.5
#> 2    2  4       4.5
#> 3    4  3       4.5
#> 4    3  5       4.5
#> 5    5  1       4.5
#> 6    4  5       4.5

# Create a new edge attribute, called `penwidth`,
# that is the log of values in `value` plus 1
graph <-
  graph \%>\%
  mutate_edge_attrs(
    "value", "log(.) + 1", "penwidth")

# Get the graph's internal edf to show that the
# edge attribute values had been mutated and used as
# the new edge attribute `penwidth`
get_edge_df(graph)
#>   from to rel value penwidth
#> 1    4  1       4.5    2.504
#> 2    2  4       4.5    2.504
#> 3    4  3       4.5    2.504
#> 4    3  5       4.5    2.504
#> 5    5  1       4.5    2.504
#> 6    4  5       4.5    2.504
}

