% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colorize_edge_attrs.R
\name{colorize_edge_attrs}
\alias{colorize_edge_attrs}
\title{Apply colors based on edge attribute values}
\usage{
colorize_edge_attrs(graph, edge_attr_from, edge_attr_to, cut_points = NULL,
  alpha = NULL, default_color = "#D9D9D9")
}
\arguments{
\item{graph}{a graph object of class}

\item{edge_attr_from}{the name of the edge attribute
column from which color values will be based.}

\item{edge_attr_to}{the name of the new edge
attribute to which the color values will be applied.}

\item{cut_points}{an optional vector of numerical
breaks for bucketizing continuous numerical values
available in a edge attribute column.}

\item{alpha}{an optional alpha transparency value to
apply to the generated colors. Should be in
the range of \code{0} (completely transparent) to
\code{100} (completely opaque).}

\item{default_color}{a hexadecimal color value to
use for instances when the values do not fall into
the bucket ranges specified in the \code{cut_points}
vector.}
}
\value{
a graph object of class
\code{dgr_graph}.
}
\description{
Within a graph's internal edge data
frame (edf), use a categorical edge attribute to
generate a new edge attribute with color values.
}
\examples{
# Create a random graph of 50 nodes and 85 edges
graph <-
  create_random_graph(
    50, 85, set_seed = 1) \%>\%
  set_edge_attrs(
    "weight", rnorm(edge_count(.), 5, 2))

# We can bucketize values in the edge `weight`
# attribute using `cut_points` and, by doing so,
# assign colors to each of the bucketed ranges
# (for values not part of any bucket, a gray color
# is assigned by default)
graph <-
  graph \%>\%
  colorize_edge_attrs(
    "weight", "color",
    cut_points = c(0, 2, 4, 6, 8, 10))

# Now there will be a `color` edge attribute
# with distinct colors
get_edge_df(graph)
#>    from to rel           weight   color
#> 1    24 44     4.58523851279607 #21908C
#> 2    22 12     4.21438414111603 #21908C
#> 3     4  6     4.36001426290299 #21908C
#> 4    16 27     4.44177339404688 #21908C
#> 5    34 20     5.98837666253565 #21908C
#> 6    46 15     4.64533903546079 #21908C
#> 7    23 17     3.98808507577148 #3B528B
#> 8    33 13     7.68607765034082 #5DC863
#> 9    24 39     4.57084118290626 #21908C
#> 10    5 44     4.64088693991323 #21908C
}

